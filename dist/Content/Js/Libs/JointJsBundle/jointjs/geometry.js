!function(root,factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?module.exports=factory():root.g=factory()}(this,function(){var g=function(){var g={},math=Math,abs=math.abs,cos=math.cos,sin=math.sin,sqrt=math.sqrt,mmin=math.min,mmax=math.max,atan2=(math.atan,math.atan2),round=(math.acos,math.round),floor=math.floor,PI=math.PI,random=math.random,Ellipse=(g.bezier={curveThroughPoints:function(points){for(var controlPoints=this.getCurveControlPoints(points),path=["M",points[0].x,points[0].y],i=0;i<controlPoints[0].length;i++)path.push("C",controlPoints[0][i].x,controlPoints[0][i].y,controlPoints[1][i].x,controlPoints[1][i].y,points[i+1].x,points[i+1].y);return path},getCurveControlPoints:function(knots){var i,firstControlPoints=[],secondControlPoints=[],n=knots.length-1;if(1==n)return firstControlPoints[0]=Point((2*knots[0].x+knots[1].x)/3,(2*knots[0].y+knots[1].y)/3),secondControlPoints[0]=Point(2*firstControlPoints[0].x-knots[0].x,2*firstControlPoints[0].y-knots[0].y),[firstControlPoints,secondControlPoints];var rhs=[];for(i=1;i<n-1;i++)rhs[i]=4*knots[i].x+2*knots[i+1].x;rhs[0]=knots[0].x+2*knots[1].x,rhs[n-1]=(8*knots[n-1].x+knots[n].x)/2;var x=this.getFirstControlPoints(rhs);for(i=1;i<n-1;++i)rhs[i]=4*knots[i].y+2*knots[i+1].y;rhs[0]=knots[0].y+2*knots[1].y,rhs[n-1]=(8*knots[n-1].y+knots[n].y)/2;var y=this.getFirstControlPoints(rhs);for(i=0;i<n;i++)firstControlPoints.push(Point(x[i],y[i])),i<n-1?secondControlPoints.push(Point(2*knots[i+1].x-x[i+1],2*knots[i+1].y-y[i+1])):secondControlPoints.push(Point((knots[n].x+x[n-1])/2,(knots[n].y+y[n-1])/2));return[firstControlPoints,secondControlPoints]},getCurveDivider:function(p0,p1,p2,p3){return function(t){var l=Line(p0,p1).pointAt(t),m=Line(p1,p2).pointAt(t),n=Line(p2,p3).pointAt(t),p=Line(l,m).pointAt(t),q=Line(m,n).pointAt(t),r=Line(p,q).pointAt(t);return[{p0:p0,p1:l,p2:p,p3:r},{p0:r,p1:q,p2:n,p3:p3}]}},getFirstControlPoints:function(rhs){var n=rhs.length,x=[],tmp=[],b=2;x[0]=rhs[0]/b;for(var i=1;i<n;i++)tmp[i]=1/b,b=(i<n-1?4:3.5)-tmp[i],x[i]=(rhs[i]-x[i-1])/b;for(i=1;i<n;i++)x[n-i-1]-=tmp[n-i]*x[n-i];return x},getInversionSolver:function(p0,p1,p2,p3){function l(i,j){var pi=pts[i],pj=pts[j];return function(p){var w=(i%3?3:1)*(j%3?3:1),lij=p.x*(pi.y-pj.y)+p.y*(pj.x-pi.x)+pi.x*pj.y-pi.y*pj.x;return w*lij}}var pts=arguments;return function(p){var ct=3*l(2,3)(p1),c1=l(1,3)(p0)/ct,c2=-l(2,3)(p0)/ct,la=c1*l(3,1)(p)+c2*(l(3,0)(p)+l(2,1)(p))+l(2,0)(p),lb=c1*l(3,0)(p)+c2*l(2,0)(p)+l(1,0)(p);return lb/(lb-la)}}},g.Ellipse=function(c,a,b){return this instanceof Ellipse?c instanceof Ellipse?new Ellipse(Point(c),c.a,c.b):(c=Point(c),this.x=c.x,this.y=c.y,this.a=a,void(this.b=b)):new Ellipse(c,a,b)});g.Ellipse.fromRect=function(rect){return rect=Rect(rect),Ellipse(rect.center(),rect.width/2,rect.height/2)},g.Ellipse.prototype={bbox:function(){return Rect(this.x-this.a,this.y-this.b,2*this.a,2*this.b)},clone:function(){return Ellipse(this)},equals:function(ellipse){return ellipse=Ellipse(ellipse),ellipse.x===this.x&&ellipse.y===this.y&&ellipse.a===this.a&&ellipse.b===this.b},intersectionWithLineFromCenterToPoint:function(p,angle){p=Point(p),angle&&p.rotate(Point(this.x,this.y),angle);var result,dx=p.x-this.x,dy=p.y-this.y;if(0===dx)return result=this.bbox().pointNearestToPoint(p),angle?result.rotate(Point(this.x,this.y),-angle):result;var m=dy/dx,mSquared=m*m,aSquared=this.a*this.a,bSquared=this.b*this.b,x=sqrt(1/(1/aSquared+mSquared/bSquared));x=dx<0?-x:x;var y=m*x;return result=Point(this.x+x,this.y+y),angle?result.rotate(Point(this.x,this.y),-angle):result},toString:function(){return Point(this.x,this.y).toString()+" "+this.a+" "+this.b}};var Line=g.Line=function(p1,p2){return this instanceof Line?(this.start=Point(p1),void(this.end=Point(p2))):new Line(p1,p2)};g.Line.prototype={bearing:function(){var lat1=toRad(this.start.y),lat2=toRad(this.end.y),lon1=this.start.x,lon2=this.end.x,dLon=toRad(lon2-lon1),y=sin(dLon)*cos(lat2),x=cos(lat1)*sin(lat2)-sin(lat1)*cos(lat2)*cos(dLon),brng=toDeg(atan2(y,x)),bearings=["NE","E","SE","S","SW","W","NW","N"],index=brng-22.5;return index<0&&(index+=360),index=parseInt(index/45),bearings[index]},clone:function(){return Line(this)},intersection:function(l){var pt1Dir=Point(this.end.x-this.start.x,this.end.y-this.start.y),pt2Dir=Point(l.end.x-l.start.x,l.end.y-l.start.y),det=pt1Dir.x*pt2Dir.y-pt1Dir.y*pt2Dir.x,deltaPt=Point(l.start.x-this.start.x,l.start.y-this.start.y),alpha=deltaPt.x*pt2Dir.y-deltaPt.y*pt2Dir.x,beta=deltaPt.x*pt1Dir.y-deltaPt.y*pt1Dir.x;if(0===det||alpha*det<0||beta*det<0)return null;if(det>0){if(alpha>det||beta>det)return null}else if(alpha<det||beta<det)return null;return Point(this.start.x+alpha*pt1Dir.x/det,this.start.y+alpha*pt1Dir.y/det)},length:function(){return sqrt(this.squaredLength())},midpoint:function(){return Point((this.start.x+this.end.x)/2,(this.start.y+this.end.y)/2)},pointAt:function(t){var x=(1-t)*this.start.x+t*this.end.x,y=(1-t)*this.start.y+t*this.end.y;return Point(x,y)},pointOffset:function(p){return((this.end.x-this.start.x)*(p.y-this.start.y)-(this.end.y-this.start.y)*(p.x-this.start.x))/2},squaredLength:function(){var x0=this.start.x,y0=this.start.y,x1=this.end.x,y1=this.end.y;return(x0-=x1)*x0+(y0-=y1)*y0},toString:function(){return this.start.toString()+" "+this.end.toString()}};var Point=g.Point=function(x,y){if(!(this instanceof Point))return new Point(x,y);if("string"==typeof x){var xy=x.split(x.indexOf("@")===-1?" ":"@");x=parseInt(xy[0],10),y=parseInt(xy[1],10)}else Object(x)===x&&(y=x.y,x=x.x);this.x=void 0===x?0:x,this.y=void 0===y?0:y};g.Point.fromPolar=function(distance,angle,origin){origin=origin&&Point(origin)||Point(0,0);var x=abs(distance*cos(angle)),y=abs(distance*sin(angle)),deg=normalizeAngle(toDeg(angle));return deg<90?y=-y:deg<180?(x=-x,y=-y):deg<270&&(x=-x),Point(origin.x+x,origin.y+y)},g.Point.random=function(x1,x2,y1,y2){return Point(floor(random()*(x2-x1+1)+x1),floor(random()*(y2-y1+1)+y1))},g.Point.prototype={adhereToRect:function(r){return r.containsPoint(this)?this:(this.x=mmin(mmax(this.x,r.x),r.x+r.width),this.y=mmin(mmax(this.y,r.y),r.y+r.height),this)},bearing:function(point){return Line(this,point).bearing()},changeInAngle:function(dx,dy,ref){return Point(this).offset(-dx,-dy).theta(ref)-this.theta(ref)},clone:function(){return Point(this)},difference:function(p){return Point(this.x-p.x,this.y-p.y)},distance:function(p){return Line(this,p).length()},equals:function(p){return this.x===p.x&&this.y===p.y},magnitude:function(){return sqrt(this.x*this.x+this.y*this.y)||.01},manhattanDistance:function(p){return abs(p.x-this.x)+abs(p.y-this.y)},move:function(ref,distance){var theta=toRad(Point(ref).theta(this));return this.offset(cos(theta)*distance,-sin(theta)*distance)},normalize:function(length){var scale=(length||1)/this.magnitude();return this.scale(scale,scale)},offset:function(dx,dy){return this.x+=dx||0,this.y+=dy||0,this},reflection:function(ref){return Point(ref).move(this,this.distance(ref))},rotate:function(origin,angle){angle=(angle+360)%360,this.toPolar(origin),this.y+=toRad(angle);var point=Point.fromPolar(this.x,this.y,origin);return this.x=point.x,this.y=point.y,this},round:function(precision){return this.x=precision?this.x.toFixed(precision):round(this.x),this.y=precision?this.y.toFixed(precision):round(this.y),this},scale:function(sx,sy,origin){return origin=origin&&Point(origin)||Point(0,0),this.x=origin.x+sx*(this.x-origin.x),this.y=origin.y+sy*(this.y-origin.y),this},snapToGrid:function(gx,gy){return this.x=snapToGrid(this.x,gx),this.y=snapToGrid(this.y,gy||gx),this},theta:function(p){p=Point(p);var y=-(p.y-this.y),x=p.x-this.x,PRECISION=10,rad=0==y.toFixed(PRECISION)&&0==x.toFixed(PRECISION)?0:atan2(y,x);return rad<0&&(rad=2*PI+rad),180*rad/PI},toJSON:function(){return{x:this.x,y:this.y}},toPolar:function(o){o=o&&Point(o)||Point(0,0);var x=this.x,y=this.y;return this.x=sqrt((x-o.x)*(x-o.x)+(y-o.y)*(y-o.y)),this.y=toRad(o.theta(Point(x,y))),this},toString:function(){return this.x+"@"+this.y},update:function(x,y){return this.x=x||0,this.y=y||0,this}};var Rect=g.Rect=function(x,y,w,h){return this instanceof Rect?(Object(x)===x&&(y=x.y,w=x.width,h=x.height,x=x.x),this.x=void 0===x?0:x,this.y=void 0===y?0:y,this.width=void 0===w?0:w,void(this.height=void 0===h?0:h)):new Rect(x,y,w,h)};g.Rect.fromEllipse=function(e){return e=Ellipse(e),Rect(e.x-e.a,e.y-e.b,2*e.a,2*e.b)},g.Rect.prototype={bbox:function(angle){var theta=toRad(angle||0),st=abs(sin(theta)),ct=abs(cos(theta)),w=this.width*ct+this.height*st,h=this.width*st+this.height*ct;return Rect(this.x+(this.width-w)/2,this.y+(this.height-h)/2,w,h)},bottomLeft:function(){return Point(this.x,this.y+this.height)},bottomMiddle:function(){return Point(this.x+this.width/2,this.y+this.height)},center:function(){return Point(this.x+this.width/2,this.y+this.height/2)},clone:function(){return Rect(this)},containsPoint:function(p){return p=Point(p),p.x>=this.x&&p.x<=this.x+this.width&&p.y>=this.y&&p.y<=this.y+this.height},containsRect:function(r){var r0=Rect(this).normalize(),r1=Rect(r).normalize(),w0=r0.width,h0=r0.height,w1=r1.width,h1=r1.height;if(!(w0&&h0&&w1&&h1))return!1;var x0=r0.x,y0=r0.y,x1=r1.x,y1=r1.y;return w1+=x1,w0+=x0,h1+=y1,h0+=y0,x0<=x1&&w1<=w0&&y0<=y1&&h1<=h0},corner:function(){return Point(this.x+this.width,this.y+this.height)},equals:function(r){var mr=Rect(this).normalize(),nr=Rect(r).normalize();return mr.x===nr.x&&mr.y===nr.y&&mr.width===nr.width&&mr.height===nr.height},intersect:function(r){var myOrigin=this.origin(),myCorner=this.corner(),rOrigin=r.origin(),rCorner=r.corner();if(rCorner.x<=myOrigin.x||rCorner.y<=myOrigin.y||rOrigin.x>=myCorner.x||rOrigin.y>=myCorner.y)return null;var x=Math.max(myOrigin.x,rOrigin.x),y=Math.max(myOrigin.y,rOrigin.y);return Rect(x,y,Math.min(myCorner.x,rCorner.x)-x,Math.min(myCorner.y,rCorner.y)-y)},intersectionWithLineFromCenterToPoint:function(p,angle){p=Point(p);var result,center=Point(this.x+this.width/2,this.y+this.height/2);angle&&p.rotate(center,angle);for(var sides=[Line(this.origin(),this.topRight()),Line(this.topRight(),this.corner()),Line(this.corner(),this.bottomLeft()),Line(this.bottomLeft(),this.origin())],connector=Line(center,p),i=sides.length-1;i>=0;--i){var intersection=sides[i].intersection(connector);if(null!==intersection){result=intersection;break}}return result&&angle&&result.rotate(center,-angle),result},leftMiddle:function(){return Point(this.x,this.y+this.height/2)},moveAndExpand:function(r){return this.x+=r.x||0,this.y+=r.y||0,this.width+=r.width||0,this.height+=r.height||0,this},normalize:function(){var newx=this.x,newy=this.y,newwidth=this.width,newheight=this.height;return this.width<0&&(newx=this.x+this.width,newwidth=-this.width),this.height<0&&(newy=this.y+this.height,newheight=-this.height),this.x=newx,this.y=newy,this.width=newwidth,this.height=newheight,this},origin:function(){return Point(this.x,this.y)},pointNearestToPoint:function(point){if(point=Point(point),this.containsPoint(point)){var side=this.sideNearestToPoint(point);switch(side){case"right":return Point(this.x+this.width,point.y);case"left":return Point(this.x,point.y);case"bottom":return Point(point.x,this.y+this.height);case"top":return Point(point.x,this.y)}}return point.adhereToRect(this)},rightMiddle:function(){return Point(this.x+this.width,this.y+this.height/2)},round:function(precision){return this.x=precision?this.x.toFixed(precision):round(this.x),this.y=precision?this.y.toFixed(precision):round(this.y),this.width=precision?this.width.toFixed(precision):round(this.width),this.height=precision?this.height.toFixed(precision):round(this.height),this},scale:function(sx,sy,origin){var origin=this.origin().scale(sx,sy,origin);return this.x=origin.x,this.y=origin.y,this.width*=sx,this.height*=sy,this},sideNearestToPoint:function(point){point=Point(point);var distToLeft=point.x-this.x,distToRight=this.x+this.width-point.x,distToTop=point.y-this.y,distToBottom=this.y+this.height-point.y,closest=distToLeft,side="left";return distToRight<closest&&(closest=distToRight,side="right"),distToTop<closest&&(closest=distToTop,side="top"),distToBottom<closest&&(closest=distToBottom,side="bottom"),side},snapToGrid:function(gx,gy){var origin=this.origin().snapToGrid(gx,gy),corner=this.corner().snapToGrid(gx,gy);return this.x=origin.x,this.y=origin.y,this.width=corner.x-origin.x,this.height=corner.y-origin.y,this},topMiddle:function(){return Point(this.x+this.width/2,this.y)},topRight:function(){return Point(this.x+this.width,this.y)},toJSON:function(){return{x:this.x,y:this.y,width:this.width,height:this.height}},toString:function(){return this.origin().toString()+" "+this.corner().toString()},union:function(rect){var myOrigin=this.origin(),myCorner=this.corner(),rOrigin=rect.origin(),rCorner=rect.corner(),originX=Math.min(myOrigin.x,rOrigin.x),originY=Math.min(myOrigin.y,rOrigin.y),cornerX=Math.max(myCorner.x,rCorner.x),cornerY=Math.max(myCorner.y,rCorner.y);return Rect(originX,originY,cornerX-originX,cornerY-originY)}};var normalizeAngle=g.normalizeAngle=function(angle){return angle%360+(angle<0?360:0)},snapToGrid=(g.scale={linear:function(domain,range,value){var domainSpan=domain[1]-domain[0],rangeSpan=range[1]-range[0];return(value-domain[0])/domainSpan*rangeSpan+range[0]||0}},g.snapToGrid=function(value,gridSize){return gridSize*Math.round(value/gridSize)}),toDeg=g.toDeg=function(rad){return 180*rad/PI%360},toRad=g.toRad=function(deg,over360){return over360=over360||!1,deg=over360?deg:deg%360,deg*PI/180};return g.ellipse=g.Ellipse,g.line=g.Line,g.point=g.Point,g.rect=g.Rect,g}();return g});