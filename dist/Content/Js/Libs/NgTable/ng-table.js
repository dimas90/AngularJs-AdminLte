!function(angular,factory){"use strict";return"function"==typeof define&&define.amd?void define(["angular"],function(angular){return factory(angular)}):factory(angular)}(window.angular||null,function(angular){"use strict";return function(){angular.module("ngTable",[])}(),function(){angular.module("ngTable").value("ngTableDefaults",{params:{},settings:{}})}(),function(){function ngTableEventsChannel($rootScope){function addChangeEvent(eventName,target){var fnName=eventName.charAt(0).toUpperCase()+eventName.substring(1),event={};return event["on"+fnName]=createEventSubscriptionFn(eventName),event["publish"+fnName]=createPublishEventFn(eventName),angular.extend(target,event)}function createEventSubscriptionFn(eventName){return function(handler){var eventSelector=angular.identity,scope=$rootScope;if(2===arguments.length?angular.isFunction(arguments[1].$new)?scope=arguments[1]:eventSelector=arguments[1]:arguments.length>2&&(scope=arguments[1],eventSelector=arguments[2]),angular.isObject(eventSelector)){var requiredPublisher=eventSelector;eventSelector=function(publisher){return publisher===requiredPublisher}}return scope.$on("ngTable:"+eventName,function(event,params){if(!params.isNullInstance){var eventArgs=rest(arguments,2),fnArgs=[params].concat(eventArgs);eventSelector.apply(this,fnArgs)&&handler.apply(this,fnArgs)}})}}function createPublishEventFn(eventName){return function(){var fnArgs=["ngTable:"+eventName].concat(Array.prototype.slice.call(arguments));$rootScope.$broadcast.apply($rootScope,fnArgs)}}function rest(array,n){return Array.prototype.slice.call(array,null==n?1:n)}var events={};return events=addChangeEvent("afterCreated",events),events=addChangeEvent("afterReloadData",events),events=addChangeEvent("datasetChanged",events),events=addChangeEvent("pagesChanged",events)}angular.module("ngTable").factory("ngTableEventsChannel",ngTableEventsChannel),ngTableEventsChannel.$inject=["$rootScope"]}(),function(){function ngTableFilterConfigProvider(){function init(){resetConfigs()}function resetConfigs(){config=defaultConfig}function setConfig(customConfig){var mergeConfig=angular.extend({},config,customConfig);mergeConfig.aliasUrls=angular.extend({},config.aliasUrls,customConfig.aliasUrls),config=mergeConfig}function ngTableFilterConfig(){function getTemplateUrl(filterDef,filterKey){return angular.isObject(filterDef)&&(filterDef=filterDef.id),filterDef.indexOf("/")!==-1?filterDef:service.getUrlForAlias(filterDef,filterKey)}function getUrlForAlias(aliasName){return config.aliasUrls[aliasName]||config.defaultBaseUrl+aliasName+config.defaultExt}var publicConfig,service={config:publicConfig,getTemplateUrl:getTemplateUrl,getUrlForAlias:getUrlForAlias};return Object.defineProperty(service,"config",{get:function(){return publicConfig=publicConfig||angular.copy(config)},enumerable:!0}),service}var config,defaultConfig={defaultBaseUrl:"ng-table/filters/",defaultExt:".html",aliasUrls:{}};this.$get=ngTableFilterConfig,this.resetConfigs=resetConfigs,this.setConfig=setConfig,init(),ngTableFilterConfig.$inject=[]}angular.module("ngTable").provider("ngTableFilterConfig",ngTableFilterConfigProvider),ngTableFilterConfigProvider.$inject=[]}(),function(){function ngTableDefaultGetDataProvider(){function ngTableDefaultGetData($filter){function getFilterFn(params){var filterOptions=params.settings().filterOptions;return angular.isFunction(filterOptions.filterFn)?filterOptions.filterFn:$filter(filterOptions.filterFilterName||provider.filterFilterName)}function getOrderByFn(){return $filter(provider.sortingFilterName)}function applyFilter(data,params){if(!params.hasFilter())return data;var filter=params.filter(!0),filterKeys=Object.keys(filter),parsedFilter=filterKeys.reduce(function(result,key){return result=setPath(result,filter[key],key)},{}),filterFn=getFilterFn(params);return filterFn.call(params,data,parsedFilter,params.settings().filterOptions.filterComparator)}function applyPaging(data,params){var pagedData=data.slice((params.page()-1)*params.count(),params.page()*params.count());return params.total(data.length),pagedData}function applySort(data,params){var orderBy=params.orderBy(),orderByFn=getOrderByFn(params);return orderBy.length?orderByFn(data,orderBy):data}function getData(data,params){if(null==data)return[];var options=angular.extend({},defaultDataOptions,params.settings().dataOptions),fData=options.applyFilter?applyFilter(data,params):data,orderedData=options.applySort?applySort(fData,params):fData;return options.applyPaging?applyPaging(orderedData,params):orderedData}function setPath(obj,value,path){var keys=path.split("."),ret=obj,lastKey=keys[keys.length-1],target=ret,parentPathKeys=keys.slice(0,keys.length-1);return parentPathKeys.forEach(function(key){target.hasOwnProperty(key)||(target[key]={}),target=target[key]}),target[lastKey]=value,ret}var defaultDataOptions={applyFilter:!0,applySort:!0,applyPaging:!0};return getData.applyPaging=applyPaging,getData.getFilterFn=getFilterFn,getData.getOrderByFn=getOrderByFn,getData}var provider=this;provider.$get=ngTableDefaultGetData,provider.filterFilterName="filter",provider.sortingFilterName="orderBy",ngTableDefaultGetData.$inject=["$filter"]}angular.module("ngTable").provider("ngTableDefaultGetData",ngTableDefaultGetDataProvider),ngTableDefaultGetDataProvider.$inject=[]}(),function(){angular.module("ngTable").factory("ngTableColumn",[function(){function buildColumn(column,defaultScope,columns){var extendedCol=Object.create(column),defaults=createDefaults();for(var prop in defaults)void 0===extendedCol[prop]&&(extendedCol[prop]=defaults[prop]),angular.isFunction(extendedCol[prop])||!function(prop1){var getterSetter=function getterSetter(){return 1!==arguments.length||isScopeLike(arguments[0])?column[prop1]:void getterSetter.assign(null,arguments[0])};getterSetter.assign=function($scope,value){column[prop1]=value},extendedCol[prop1]=getterSetter}(prop),function(prop1){var getterFn=extendedCol[prop1];extendedCol[prop1]=function(){if(1!==arguments.length||isScopeLike(arguments[0])){var scope=arguments[0]||defaultScope,context=Object.create(scope);return angular.extend(context,{$column:extendedCol,$columns:columns}),getterFn.call(column,context)}getterFn.assign(null,arguments[0])},getterFn.assign&&(extendedCol[prop1].assign=getterFn.assign)}(prop);return extendedCol}function createDefaults(){return{"class":createGetterSetter(""),filter:createGetterSetter(!1),groupable:createGetterSetter(!1),filterData:angular.noop,headerTemplateURL:createGetterSetter(!1),headerTitle:createGetterSetter(""),sortable:createGetterSetter(!1),show:createGetterSetter(!0),title:createGetterSetter(""),titleAlt:createGetterSetter("")}}function createGetterSetter(initialValue){var value=initialValue,getterSetter=function getterSetter(){return 1!==arguments.length||isScopeLike(arguments[0])?value:void getterSetter.assign(null,arguments[0])};return getterSetter.assign=function($scope,newValue){value=newValue},getterSetter}function isScopeLike(object){return null!=object&&angular.isFunction(object.$new)}return{buildColumn:buildColumn}}])}(),function(){angular.module("ngTable").factory("NgTableParams",["$q","$log","$filter","ngTableDefaults","ngTableDefaultGetData","ngTableEventsChannel",function($q,$log,$filter,ngTableDefaults,ngTableDefaultGetData,ngTableEventsChannel){var isNumber=function(n){return!isNaN(parseFloat(n))&&isFinite(n)},NgTableParams=function(baseParameters,baseSettings){function parseGroup(group){var defaultSort=settings.groupOptions&&settings.groupOptions.defaultSort;if(angular.isFunction(group))return null==group.sortDirection&&(group.sortDirection=defaultSort),group;if(angular.isString(group)){var grp={};return grp[group]=defaultSort,grp}if(angular.isObject(group)){for(var key in group)null==group[key]&&(group[key]=defaultSort);return group}return group}function convertSortToOrderBy(sorting){var result=[];for(var column in sorting)result.push(("asc"===sorting[column]?"+":"-")+column);return result}function createComparableParams(){var result={params:params};return angular.isFunction(params.group)&&(result.groupSortDirection=params.group.sortDirection),result}function hasGlobalSearchFieldChanges(){var currentVal=params.filter&&params.filter.$,previousVal=prevParamsMemento&&prevParamsMemento.params.filter&&prevParamsMemento.params.filter.$;return!angular.equals(currentVal,previousVal)}function optimizeFilterDelay(){settings.filterOptions.filterDelay===defaultFilterOptions.filterDelay&&settings.total<=settings.filterOptions.filterDelayThreshold&&settings.getData===defaultSettingsFns.getData&&(settings.filterOptions.filterDelay=0)}function runInterceptorPipeline(fetchedData){var interceptors=settings.interceptors||[];return interceptors.reduce(function(result,interceptor){var thenFn=interceptor.response&&interceptor.response.bind(interceptor)||$q.when,rejectFn=interceptor.responseError&&interceptor.responseError.bind(interceptor)||$q.reject;return result.then(function(data){return thenFn(data,self)},function(reason){return rejectFn(reason,self)})},fetchedData)}function getDefaultSettingFns(){function getData(params){return ngTableDefaultGetData(params.settings().dataset,params)}function getGroups(params){var groupFn,group=params.group(),sortDirection=void 0;if(angular.isFunction(group))groupFn=group,sortDirection=group.sortDirection;else{var groupField=Object.keys(group)[0];sortDirection=group[groupField],groupFn=function(item){return getPath(item,groupField)}}var settings=params.settings(),originalDataOptions=settings.dataOptions;settings.dataOptions={applyPaging:!1};var gotData=$q.when(settings.getData(params));return gotData.then(function(data){var groups={};angular.forEach(data,function(item){var groupName=groupFn(item);groups[groupName]=groups[groupName]||{data:[],$hideRows:!settings.groupOptions.isExpanded,value:groupName},groups[groupName].data.push(item)});var result=[];for(var i in groups)result.push(groups[i]);if(sortDirection){var orderByFn=ngTableDefaultGetData.getOrderByFn(),orderBy=convertSortToOrderBy({value:sortDirection});result=orderByFn(result,orderBy)}return ngTableDefaultGetData.applyPaging(result,params)})["finally"](function(){settings.dataOptions=originalDataOptions})}function getPath(obj,ks){if("string"==typeof ks&&(ks=ks.split(".")),void 0!==obj){if(0===ks.length)return obj;if(null!==obj)return getPath(obj[ks[0]],ks.slice(1))}}return{getData:getData,getGroups:getGroups}}"boolean"==typeof baseParameters&&(this.isNullInstance=!0);var prevParamsMemento,errParamsMemento,self=this,isCommittedDataset=!1,initialEvents=[],log=function(){settings.debugMode&&$log.debug&&$log.debug.apply($log,arguments)},defaultFilterOptions={filterComparator:void 0,filterDelay:500,filterDelayThreshold:1e4,filterFilterName:void 0,filterFn:void 0,filterLayout:"stack"},defaultGroupOptions={defaultSort:"asc",isExpanded:!0},defaultSettingsFns=getDefaultSettingFns();this.data=[],this.parameters=function(newParameters,parseParamsFromUrl){if(parseParamsFromUrl=parseParamsFromUrl||!1,angular.isDefined(newParameters)){for(var key in newParameters){var value=newParameters[key];if(parseParamsFromUrl&&key.indexOf("[")>=0){for(var keys=key.split(/\[(.*)\]/).reverse(),lastKey="",i=0,len=keys.length;i<len;i++){var name=keys[i];if(""!==name){var v=value;value={},value[lastKey=name]=isNumber(v)?parseFloat(v):v}}"sorting"===lastKey&&(params[lastKey]={}),params[lastKey]=angular.extend(params[lastKey]||{},value[lastKey])}else"group"===key?params[key]=parseGroup(newParameters[key]):params[key]=isNumber(newParameters[key])?parseFloat(newParameters[key]):newParameters[key]}return log("ngTable: set parameters",params),this}return params},this.settings=function(newSettings){if(angular.isDefined(newSettings)){newSettings.filterOptions&&(newSettings.filterOptions=angular.extend({},settings.filterOptions,newSettings.filterOptions)),newSettings.groupOptions&&(newSettings.groupOptions=angular.extend({},settings.groupOptions,newSettings.groupOptions)),angular.isArray(newSettings.dataset)&&(newSettings.total=newSettings.dataset.length);var originalDataset=settings.dataset;settings=angular.extend(settings,newSettings),angular.isArray(newSettings.dataset)&&optimizeFilterDelay();var hasDatasetChanged=newSettings.hasOwnProperty("dataset")&&newSettings.dataset!=originalDataset;if(hasDatasetChanged){isCommittedDataset&&this.page(1),isCommittedDataset=!1;var fireEvent=function(){ngTableEventsChannel.publishDatasetChanged(self,newSettings.dataset,originalDataset)};initialEvents?initialEvents.push(fireEvent):fireEvent()}return log("ngTable: set settings",settings),this}return settings},this.page=function(page){return angular.isDefined(page)?this.parameters({page:page}):params.page},this.total=function(total){return angular.isDefined(total)?this.settings({total:total}):settings.total},this.count=function(count){return angular.isDefined(count)?this.parameters({count:count,page:1}):params.count},this.filter=function(filter){if(angular.isDefined(filter)&&angular.isObject(filter))return this.parameters({filter:filter,page:1});if(filter===!0){for(var keys=Object.keys(params.filter),significantFilter={},i=0;i<keys.length;i++){var filterValue=params.filter[keys[i]];null!=filterValue&&""!==filterValue&&(significantFilter[keys[i]]=filterValue)}return significantFilter}return params.filter},this.group=function(group,sortDirection){if(!angular.isDefined(group))return params.group;var newParameters={page:1};if(angular.isFunction(group)&&angular.isDefined(sortDirection))group.sortDirection=sortDirection,newParameters.group=group;else if(angular.isDefined(group)&&angular.isDefined(sortDirection)){var groupArray={};groupArray[group]=sortDirection,newParameters.group=groupArray}else newParameters.group=group;return this.parameters(newParameters),this},this.sorting=function(sorting){if(2==arguments.length){var sortArray={};return sortArray[sorting]=arguments[1],this.parameters({sorting:sortArray}),this}return angular.isDefined(sorting)?this.parameters({sorting:sorting}):params.sorting},this.isSortBy=function(field,direction){return void 0!==direction?angular.isDefined(params.sorting[field])&&params.sorting[field]==direction:angular.isDefined(params.sorting[field])},this.orderBy=function(){return convertSortToOrderBy(params.sorting)},this.generatePagesArray=function(currentPage,totalItems,pageSize,maxBlocks){arguments.length||(currentPage=this.page(),totalItems=this.total(),pageSize=this.count());var maxPage,maxPivotPages,minPage,numPages,pages;if(maxBlocks=maxBlocks&&maxBlocks<6?6:maxBlocks,pages=[],numPages=Math.ceil(totalItems/pageSize),numPages>1){pages.push({type:"prev",number:Math.max(1,currentPage-1),active:currentPage>1}),pages.push({type:"first",number:1,active:currentPage>1,current:1===currentPage}),maxPivotPages=Math.round((settings.paginationMaxBlocks-settings.paginationMinBlocks)/2),minPage=Math.max(2,currentPage-maxPivotPages),maxPage=Math.min(numPages-1,currentPage+2*maxPivotPages-(currentPage-minPage)),minPage=Math.max(2,minPage-(2*maxPivotPages-(maxPage-minPage)));for(var i=minPage;i<=maxPage;)i===minPage&&2!==i||i===maxPage&&i!==numPages-1?pages.push({type:"more",active:!1}):pages.push({type:"page",number:i,active:currentPage!==i,current:currentPage===i}),i++;pages.push({type:"last",number:numPages,active:currentPage!==numPages,current:currentPage===numPages}),pages.push({type:"next",number:Math.min(numPages,currentPage+1),active:currentPage<numPages})}return pages},this.isDataReloadRequired=function(){return!isCommittedDataset||!angular.equals(createComparableParams(),prevParamsMemento)||hasGlobalSearchFieldChanges()},this.hasFilter=function(){return Object.keys(this.filter(!0)).length>0},this.hasGroup=function(group,sortDirection){return null==group?angular.isFunction(params.group)||Object.keys(params.group).length>0:angular.isFunction(group)?null==sortDirection?params.group===group:params.group===group&&group.sortDirection===sortDirection:null==sortDirection?Object.keys(params.group).indexOf(group)!==-1:params.group[group]===sortDirection},this.hasFilterChanges=function(){var previousFilter=prevParamsMemento&&prevParamsMemento.params.filter;return!angular.equals(params.filter,previousFilter)||hasGlobalSearchFieldChanges()},this.url=function(asString){function collectValue(value,key){asString?pairs.push(key+"="+encodeURIComponent(value)):pairs[key]=encodeURIComponent(value)}function isSignificantValue(value,key){return"group"===key||angular.isDefined(value)&&""!==value}asString=asString||!1;var pairs=asString?[]:{};for(var key in params)if(params.hasOwnProperty(key)){var item=params[key],name=encodeURIComponent(key);if("object"==typeof item){for(var subkey in item)if(isSignificantValue(item[subkey],key)){var pname=name+"["+encodeURIComponent(subkey)+"]";collectValue(item[subkey],pname)}}else!angular.isFunction(item)&&isSignificantValue(item,key)&&collectValue(item,name)}return pairs},this.reload=function(){var self=this,pData=null;settings.$loading=!0,prevParamsMemento=angular.copy(createComparableParams()),isCommittedDataset=!0,pData=runInterceptorPipeline(self.hasGroup()?$q.when(settings.getGroups(self)):$q.when(settings.getData(self))),log("ngTable: reload data");var oldData=self.data;return pData.then(function(data){return settings.$loading=!1,errParamsMemento=null,self.data=data,ngTableEventsChannel.publishAfterReloadData(self,data,oldData),self.reloadPages(),data})["catch"](function(reason){return errParamsMemento=prevParamsMemento,$q.reject(reason)})},this.hasErrorState=function(){return!(!errParamsMemento||!angular.equals(errParamsMemento,createComparableParams()))},this.reloadPages=function(){var currentPages;return function(){var oldPages=currentPages,newPages=self.generatePagesArray(self.page(),self.total(),self.count());angular.equals(oldPages,newPages)||(currentPages=newPages,ngTableEventsChannel.publishPagesChanged(this,newPages,oldPages))}}();var params={page:1,count:10,filter:{},sorting:{},group:{}};angular.extend(params,ngTableDefaults.params);var settings={$loading:!1,dataset:null,total:0,defaultSort:"desc",filterOptions:angular.copy(defaultFilterOptions),groupOptions:angular.copy(defaultGroupOptions),counts:[10,25,50,100],interceptors:[],paginationMaxBlocks:11,paginationMinBlocks:5,sortingIndicator:"span"};return this.settings(defaultSettingsFns),this.settings(ngTableDefaults.settings),this.settings(baseSettings),this.parameters(baseParameters,!0),ngTableEventsChannel.publishAfterCreated(this),angular.forEach(initialEvents,function(event){event()}),initialEvents=null,this};return NgTableParams}])}(),function(){angular.module("ngTable").controller("ngTableController",["$scope","NgTableParams","$timeout","$parse","$compile","$attrs","$element","ngTableColumn","ngTableEventsChannel",function($scope,NgTableParams,$timeout,$parse,$compile,$attrs,$element,ngTableColumn,ngTableEventsChannel){function onDataReloadStatusChange(newStatus){if(newStatus&&!$scope.params.hasErrorState()){$scope.params.settings().$scope=$scope;var currentParams=$scope.params,filterOptions=currentParams.settings().filterOptions;if(currentParams.hasFilterChanges()){var applyFilter=function(){currentParams.page(1),currentParams.reload()};filterOptions.filterDelay?delayFilter(applyFilter,filterOptions.filterDelay):applyFilter()}else currentParams.reload()}}function setupFilterRowBindingsToInternalScope(){$attrs.showFilter?$scope.$parent.$watch($attrs.showFilter,function(value){$scope.show_filter=value}):$scope.$watch(hasVisibleFilterColumn,function(value){$scope.show_filter=value}),$attrs.disableFilter&&$scope.$parent.$watch($attrs.disableFilter,function(value){$scope.$filterRow.disabled=value})}function setupGroupRowBindingsToInternalScope(){if($scope.$groupRow={},$attrs.showGroup){var showGroupGetter=$parse($attrs.showGroup);$scope.$parent.$watch(showGroupGetter,function(value){$scope.$groupRow.show=value}),showGroupGetter.assign&&$scope.$watch("$groupRow.show",function(value){showGroupGetter.assign($scope.$parent,value)})}else $scope.$watch("params.hasGroup()",function(newValue){$scope.$groupRow.show=newValue})}function getVisibleColumns(){return($scope.$columns||[]).filter(function(c){return c.show($scope)})}function hasVisibleFilterColumn(){return!!$scope.$columns&&some($scope.$columns,function($column){return $column.show($scope)&&$column.filter($scope)})}function some(array,predicate){for(var found=!1,i=0;i<array.length;i++){var obj=array[i];if(predicate(obj)){found=!0;break}}return found}function commonInit(){function bindDataToScope(params,newDatapage){var visibleColumns=getVisibleColumns();params.hasGroup()?($scope.$groups=newDatapage||[],$scope.$groups.visibleColumnCount=visibleColumns.length):($scope.$data=newDatapage||[],$scope.$data.visibleColumnCount=visibleColumns.length)}function bindPagesToScope(params,newPages){$scope.pages=newPages}function isMyPublisher(publisher){return $scope.params===publisher}ngTableEventsChannel.onAfterReloadData(bindDataToScope,$scope,isMyPublisher),ngTableEventsChannel.onPagesChanged(bindPagesToScope,$scope,isMyPublisher)}$scope.$filterRow={},$scope.$loading=!1,$scope.hasOwnProperty("params")||($scope.params=new NgTableParams((!0))),$scope.params.settings().$scope=$scope;var delayFilter=function(){var timer=0;return function(callback,ms){$timeout.cancel(timer),timer=$timeout(callback,ms)}}();$scope.$watch("params",function(newParams,oldParams){newParams!==oldParams&&newParams&&newParams.reload()},!1),$scope.$watch("params.isDataReloadRequired()",onDataReloadStatusChange),this.compileDirectiveTemplates=function(){if(!$element.hasClass("ng-table")){$scope.templates={header:$attrs.templateHeader?$attrs.templateHeader:"ng-table/header.html",pagination:$attrs.templatePagination?$attrs.templatePagination:"ng-table/pager.html"},$element.addClass("ng-table");var headerTemplate=null,theadFound=!1;angular.forEach($element.children(),function(e){"THEAD"===e.tagName&&(theadFound=!0)}),theadFound||(headerTemplate=angular.element(document.createElement("thead")).attr("ng-include","templates.header"),$element.prepend(headerTemplate));var paginationTemplate=angular.element(document.createElement("div")).attr({"ng-table-pagination":"params","template-url":"templates.pagination"});$element.after(paginationTemplate),headerTemplate&&$compile(headerTemplate)($scope),$compile(paginationTemplate)($scope)}},this.loadFilterData=function($columns){angular.forEach($columns,function($column){var result;if(result=$column.filterData($scope),!result)return void delete $column.filterData;if(angular.isObject(result)&&(angular.isObject(result.promise)||angular.isFunction(result.then))){var pData=angular.isFunction(result.then)?result:result.promise;return delete $column.filterData,pData.then(function(data){angular.isArray(data)||angular.isFunction(data)||angular.isObject(data)||(data=[]),$column.data=data})}return $column.data=result})},this.buildColumns=function(columns){var result=[];return(columns||[]).forEach(function(col){result.push(ngTableColumn.buildColumn(col,$scope,result))}),result},this.parseNgTableDynamicExpr=function(attr){if(!attr||attr.indexOf(" with ")>-1){var parts=attr.split(/\s+with\s+/);return{tableParams:parts[0],columns:parts[1]}}throw new Error("Parse error (expected example: ng-table-dynamic='tableParams with cols')")},this.setupBindingsToInternalScope=function(tableParamsExpr){var tableParamsGetter=$parse(tableParamsExpr);$scope.$watch(tableParamsGetter,function(params){angular.isUndefined(params)||($scope.paramsModel=tableParamsGetter,$scope.params=params)},!1),setupFilterRowBindingsToInternalScope(),setupGroupRowBindingsToInternalScope()},commonInit()}])}(),function(){angular.module("ngTable").directive("ngTable",["$q","$parse",function($q,$parse){return{restrict:"A",priority:1001,scope:!0,controller:"ngTableController",compile:function(element){var dataRow,groupRow,columns=[],i=0,rows=[];if(angular.forEach(element.find("tr"),function(tr){rows.push(angular.element(tr))}),dataRow=rows.filter(function(tr){return!tr.hasClass("ng-table-group")})[0],groupRow=rows.filter(function(tr){return tr.hasClass("ng-table-group")})[0],dataRow)return angular.forEach(dataRow.find("td"),function(item){var el=angular.element(item);if(!el.attr("ignore-cell")||"true"!==el.attr("ignore-cell")){var getAttrValue=function(attr){return el.attr("x-data-"+attr)||el.attr("data-"+attr)||el.attr(attr)},setAttrValue=function(attr,value){el.attr("x-data-"+attr)?el.attr("x-data-"+attr,value):el.attr("data"+attr)?el.attr("data"+attr,value):el.attr(attr,value)},parsedAttribute=function(attr){var expr=getAttrValue(attr);if(expr){var localValue,getter=function(context){return void 0!==localValue?localValue:$parse(expr)(context)};return getter.assign=function($scope,value){var parsedExpr=$parse(expr);parsedExpr.assign?parsedExpr.assign($scope.$parent,value):localValue=value},getter}},titleExpr=getAttrValue("title-alt")||getAttrValue("title");titleExpr&&el.attr("data-title-text","{{"+titleExpr+"}}"),columns.push({id:i++,title:parsedAttribute("title"),titleAlt:parsedAttribute("title-alt"),headerTitle:parsedAttribute("header-title"),sortable:parsedAttribute("sortable"),"class":parsedAttribute("header-class"),filter:parsedAttribute("filter"),groupable:parsedAttribute("groupable"),headerTemplateURL:parsedAttribute("header"),filterData:parsedAttribute("filter-data"),show:el.attr("ng-if")?parsedAttribute("ng-if"):void 0}),(groupRow||el.attr("ng-if"))&&setAttrValue("ng-if","$columns["+(columns.length-1)+"].show(this)")}}),function(scope,element,attrs,controller){scope.$columns=columns=controller.buildColumns(columns),controller.setupBindingsToInternalScope(attrs.ngTable),controller.loadFilterData(columns),controller.compileDirectiveTemplates()}}}}])}(),function(){angular.module("ngTable").directive("ngTableDynamic",[function(){return{restrict:"A",priority:1001,scope:!0,controller:"ngTableController",compile:function(tElement){var row;if(angular.forEach(tElement.find("tr"),function(tr){tr=angular.element(tr),tr.hasClass("ng-table-group")||row||(row=tr)}),row)return angular.forEach(row.find("td"),function(item){var el=angular.element(item),getAttrValue=function(attr){return el.attr("x-data-"+attr)||el.attr("data-"+attr)||el.attr(attr)},titleExpr=getAttrValue("title");titleExpr||el.attr("data-title-text","{{$columns[$index].titleAlt(this) || $columns[$index].title(this)}}");var showExpr=el.attr("ng-if");showExpr||el.attr("ng-if","$columns[$index].show(this)")}),function(scope,element,attrs,controller){var expr=controller.parseNgTableDynamicExpr(attrs.ngTableDynamic);controller.setupBindingsToInternalScope(expr.tableParams),controller.compileDirectiveTemplates(),scope.$watchCollection(expr.columns,function(newCols){scope.$columns=controller.buildColumns(newCols),controller.loadFilterData(scope.$columns)})}}}}])}(),function(){function ngTableColumnsBinding($parse){function linkFn($scope,$element,$attrs){var setter=$parse($attrs.ngTableColumnsBinding).assign;setter&&$scope.$watch("$columns",function(newColumns){var shallowClone=(newColumns||[]).slice(0);setter($scope,shallowClone)})}var directive={restrict:"A",require:"ngTable",link:linkFn};return directive}angular.module("ngTable").directive("ngTableColumnsBinding",ngTableColumnsBinding),ngTableColumnsBinding.$inject=["$parse"]}(),function(){angular.module("ngTable").directive("ngTablePagination",["$compile","ngTableEventsChannel",function($compile,ngTableEventsChannel){return{restrict:"A",scope:{params:"=ngTablePagination",templateUrl:"="},replace:!1,link:function(scope,element){ngTableEventsChannel.onAfterReloadData(function(pubParams){scope.pages=pubParams.generatePagesArray()},scope,function(pubParams){return pubParams===scope.params}),scope.$watch("templateUrl",function(templateUrl){if(!angular.isUndefined(templateUrl)){var template=angular.element(document.createElement("div"));template.attr({"ng-include":"templateUrl"}),element.append(template),$compile(template)(scope)}})}}}])}(),function(){function ngTableFilterRowController($scope,ngTableFilterConfig){$scope.config=ngTableFilterConfig,$scope.getFilterCellCss=function(filter,layout){if("horizontal"!==layout)return"s12";var size=Object.keys(filter).length,width=parseInt(12/size,10);return"s"+width},$scope.getFilterPlaceholderValue=function(filterValue){return angular.isObject(filterValue)?filterValue.placeholder:""}}angular.module("ngTable").controller("ngTableFilterRowController",ngTableFilterRowController),ngTableFilterRowController.$inject=["$scope","ngTableFilterConfig"]}(),function(){function ngTableFilterRow(){var directive={restrict:"E",replace:!0,templateUrl:"ng-table/filterRow.html",scope:!0,controller:"ngTableFilterRowController"};return directive}angular.module("ngTable").directive("ngTableFilterRow",ngTableFilterRow),ngTableFilterRow.$inject=[]}(),function(){function ngTableGroupRowController($scope){function init(){$scope.getGroupables=getGroupables,$scope.getGroupTitle=getGroupTitle,$scope.getVisibleColumns=getVisibleColumns,$scope.groupBy=groupBy,$scope.isSelectedGroup=isSelectedGroup,$scope.toggleDetail=toggleDetail,$scope.$watch("params.group()",setGroup,!0)}function changeSortDirection(){var newDirection;newDirection=$scope.params.hasGroup($scope.$selGroup,"asc")?"desc":$scope.params.hasGroup($scope.$selGroup,"desc")?"":"asc",$scope.params.group($scope.$selGroup,newDirection)}function findGroupColumn(groupKey){return $scope.$columns.filter(function($column){return $column.groupable($scope)===groupKey})[0]}function getGroupTitle(group){return angular.isFunction(group)?group.title:group.title($scope)}function getGroupables(){var groupableCols=$scope.$columns.filter(function($column){return $column.groupable($scope)});return groupFns.concat(groupableCols)}function getVisibleColumns(){return $scope.$columns.filter(function($column){return $column.show($scope)})}function groupBy(group){isSelectedGroup(group)?changeSortDirection():group.groupable?$scope.params.group(group.groupable($scope)):$scope.params.group(group)}function isSelectedGroup(group){return group.groupable?group.groupable($scope)===$scope.$selGroup:group===$scope.$selGroup}function setGroup(group){var existingGroupCol=findGroupColumn($scope.$selGroup);if(existingGroupCol&&existingGroupCol.show.assign&&existingGroupCol.show.assign($scope,!0),angular.isFunction(group))groupFns=[group],$scope.$selGroup=group,$scope.$selGroupTitle=group.title;else{var groupKey=Object.keys(group||{})[0],groupedColumn=findGroupColumn(groupKey);groupedColumn&&($scope.$selGroupTitle=groupedColumn.title($scope),$scope.$selGroup=groupKey,groupedColumn.show.assign&&groupedColumn.show.assign($scope,!1))}}function toggleDetail(){return $scope.params.settings().groupOptions.isExpanded=!$scope.params.settings().groupOptions.isExpanded,$scope.params.reload()}var groupFns=[];init()}angular.module("ngTable").controller("ngTableGroupRowController",ngTableGroupRowController),ngTableGroupRowController.$inject=["$scope"]}(),function(){function ngTableGroupRow(){var directive={restrict:"E",replace:!0,templateUrl:"ng-table/groupRow.html",scope:!0,controller:"ngTableGroupRowController",controllerAs:"dctrl"};return directive}angular.module("ngTable").directive("ngTableGroupRow",ngTableGroupRow),ngTableGroupRow.$inject=[]}(),function(){function ngTableSorterRowController($scope){function sortBy($column,event){var parsedSortable=$column.sortable&&$column.sortable();if(parsedSortable){var defaultSort=$scope.params.settings().defaultSort,inverseSort="asc"===defaultSort?"desc":"asc",sorting=$scope.params.sorting()&&$scope.params.sorting()[parsedSortable]&&$scope.params.sorting()[parsedSortable]===defaultSort,sortingParams=event.ctrlKey||event.metaKey?$scope.params.sorting():{};sortingParams[parsedSortable]=sorting?inverseSort:defaultSort,$scope.params.parameters({sorting:sortingParams})}}$scope.sortBy=sortBy}angular.module("ngTable").controller("ngTableSorterRowController",ngTableSorterRowController),ngTableSorterRowController.$inject=["$scope"]}(),function(){function ngTableSorterRow(){var directive={
restrict:"E",replace:!0,templateUrl:"ng-table/sorterRow.html",scope:!0,controller:"ngTableSorterRowController"};return directive}angular.module("ngTable").directive("ngTableSorterRow",ngTableSorterRow),ngTableSorterRow.$inject=[]}(),function(){function ngTableSelectFilterDs(){var directive={restrict:"A",controller:ngTableSelectFilterDsController};return directive}function ngTableSelectFilterDsController($scope,$parse,$attrs,$q){function init(){$column=$parse($attrs.ngTableSelectFilterDs)($scope),$scope.$watch(function(){return $column.data},bindDataSource)}function bindDataSource(){getSelectListData($column).then(function(data){data&&!hasEmptyOption(data)&&data.unshift({id:"",title:""}),data=data||[],$scope.$selectData=data})}function hasEmptyOption(data){for(var isMatch,i=0;i<data.length;i++){var item=data[i];if(item&&""===item.id){isMatch=!0;break}}return isMatch}function getSelectListData($column){var data=angular.isFunction($column.data)?$column.data():$column.data;return $q.when(data)}var $column={};init()}angular.module("ngTable").directive("ngTableSelectFilterDs",ngTableSelectFilterDs),ngTableSelectFilterDs.$inject=[],ngTableSelectFilterDsController.$inject=["$scope","$parse","$attrs","$q"]}(),angular.module("ngTable").run(["$templateCache",function($templateCache){$templateCache.put("ng-table/filterRow.html",'<tr ng-show="show_filter" class="ng-table-filters"> <th data-title-text="{{$column.titleAlt(this) || $column.title(this)}}" ng-repeat="$column in $columns" ng-if="$column.show(this)" class="filter {{$column.class(this)}}" ng-class="params.settings().filterOptions.filterLayout===\'horizontal\' ? \'filter-horizontal\' : \'\'"> <div ng-repeat="(name, filter) in $column.filter(this)" ng-include="config.getTemplateUrl(filter)" class="filter-cell" ng-class="[getFilterCellCss($column.filter(this), params.settings().filterOptions.filterLayout), $last ? \'last\' : \'\']"> </div> </th> </tr> '),$templateCache.put("ng-table/filters/number.html",'<input type="number" name="{{name}}" ng-disabled="$filterRow.disabled" ng-model="params.filter()[name]" class="input-filter form-control" placeholder="{{getFilterPlaceholderValue(filter, name)}}"/> '),$templateCache.put("ng-table/filters/select-multiple.html",'<select ng-options="data.id as data.title for data in $column.data" ng-disabled="$filterRow.disabled" multiple ng-multiple="true" ng-model="params.filter()[name]" class="filter filter-select-multiple form-control" name="{{name}}"> </select> '),$templateCache.put("ng-table/filters/select.html",'<select ng-options="data.id as data.title for data in $selectData" ng-table-select-filter-ds="$column" ng-disabled="$filterRow.disabled" ng-model="params.filter()[name]" class="filter filter-select form-control" name="{{name}}"> <option style="display:none" value=""></option> </select> '),$templateCache.put("ng-table/filters/text.html",'<input type="text" name="{{name}}" ng-disabled="$filterRow.disabled" ng-model="params.filter()[name]" class="input-filter form-control" placeholder="{{getFilterPlaceholderValue(filter, name)}}"/> '),$templateCache.put("ng-table/groupRow.html",'<tr ng-if="params.hasGroup()" ng-show="$groupRow.show" class="ng-table-group-header"> <th colspan="{{getVisibleColumns().length}}" class="sortable" ng-class="{ \'sort-asc\': params.hasGroup($selGroup, \'asc\'), \'sort-desc\':params.hasGroup($selGroup, \'desc\') }"> <a href="" ng-click="isSelectorOpen=!isSelectorOpen" class="ng-table-group-selector"> <strong class="sort-indicator">{{$selGroupTitle}}</strong> <button class="btn btn-default btn-xs ng-table-group-close" ng-click="$groupRow.show=false; $event.preventDefault(); $event.stopPropagation();"> <span class="glyphicon glyphicon-remove"></span> </button> <button class="btn btn-default btn-xs ng-table-group-toggle" ng-click="toggleDetail(); $event.preventDefault(); $event.stopPropagation();"> <span class="glyphicon" ng-class="{ \'glyphicon-resize-small\': params.settings().groupOptions.isExpanded, \'glyphicon-resize-full\': !params.settings().groupOptions.isExpanded }"></span> </button> </a> <div class="list-group" ng-if="isSelectorOpen"> <a href="" class="list-group-item" ng-repeat="group in getGroupables()" ng-click="groupBy(group)"> <strong>{{ getGroupTitle(group)}}</strong> <strong ng-class="isSelectedGroup(group) && \'sort-indicator\'"></strong> </a> </div> </th> </tr> '),$templateCache.put("ng-table/header.html","<ng-table-group-row></ng-table-group-row> <ng-table-sorter-row></ng-table-sorter-row> <ng-table-filter-row></ng-table-filter-row> "),$templateCache.put("ng-table/pager.html",'<div class="ng-cloak ng-table-pager" ng-if="params.data.length"> <div ng-if="params.settings().counts.length" class="ng-table-counts btn-group pull-right"> <button ng-repeat="count in params.settings().counts" type="button" ng-class="{\'active\':params.count()==count}" ng-click="params.count(count)" class="btn btn-default"> <span ng-bind="count"></span> </button> </div> <ul ng-if="pages.length" class="pagination ng-table-pagination"> <li ng-class="{\'disabled\': !page.active && !page.current, \'active\': page.current}" ng-repeat="page in pages" ng-switch="page.type"> <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo;</a> <a ng-switch-when="first" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="page" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="more" ng-click="params.page(page.number)" href="">&#8230;</a> <a ng-switch-when="last" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="next" ng-click="params.page(page.number)" href="">&raquo;</a> </li> </ul> </div> '),$templateCache.put("ng-table/sorterRow.html",'<tr class="ng-table-sort-header"> <th title="{{$column.headerTitle(this)}}" ng-repeat="$column in $columns" ng-class="{ \'sortable\': $column.sortable(this), \'sort-asc\': params.sorting()[$column.sortable(this)]==\'asc\', \'sort-desc\': params.sorting()[$column.sortable(this)]==\'desc\' }" ng-click="sortBy($column, $event)" ng-if="$column.show(this)" ng-init="template=$column.headerTemplateURL(this)" class="header {{$column.class(this)}}"> <div ng-if="!template" class="ng-table-header" ng-class="{\'sort-indicator\': params.settings().sortingIndicator==\'div\'}"> <span ng-bind="$column.title(this)" ng-class="{\'sort-indicator\': params.settings().sortingIndicator==\'span\'}"></span> </div> <div ng-if="template" ng-include="template"></div> </th> </tr> ')}]),angular.module("ngTable")});